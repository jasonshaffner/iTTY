#!/usr/bin/python

import getpass, sys, threading
from iTTY.mpcommandthread import Mpcommand
from multiprocessing import Manager

if len(sys.argv) < 5:
	username = raw_input("Username: ")
	password = getpass.getpass()
	devicelist = raw_input("Device list file: ")
	configs = raw_input("Are you making config changes? [y/n] ")
else:
	username = sys.argv[1]
	password = sys.argv[2]
	devicelist = sys.argv[3]
	configs = sys.argv[4]
hostnames = open(devicelist, 'r')
if "y" in configs: command_delay = 1
else: commanddelay = 5 #Seconds to wait for each command to finish
manager = Manager()
report = manager.list([])
threadcount = 1000
commandfiles = 0
junos = []
try:
	junos = list(open('JUNOS', 'r'))
	junos.insert(0, 'set cli screen-length 0')
except: commandfiles += 1
ios = []
try:
	ios = list(open('IOS', 'r'))
	ios.insert(0, 'terminal length 0')
except: commandfiles += 1
xr = []
try:
	xr = list(open('XR', 'r'))
	xr.insert(0, 'terminal length 0')
except: commandfiles += 1
alu = []
try:
	alu = list(open('ALU', 'r'))
	alu.insert(0, "environment no more")
except: commandfiles += 1
asa = []
try:
	asa = list(open('ASA', 'r'))
	asa.insert(0, 'enable')
	asa.insert(1, password)
	asa.insert(2, 'terminal pager 0')
except: commandfiles += 1
if commandfiles == 5:
	print "Couldn't find command files\r"
	exit()
pool = threading.Semaphore(threadcount)
threads = []
for host in hostnames:
	with pool:
		thread = Mpcommand(username, password, host, commanddelay, pool=pool, junoscommands=junos, ioscommands=ios, xrcommands=xr, alucommands=alu, asacommands=asa)
		threads.append(thread)
		thread.start()
for t in threads: report.append(t.join())
hostnames.close()
report = sorted(report, key=lambda hostname: hostname[0])
for y in report:
	for x in y: print x
