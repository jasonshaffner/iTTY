#!/home/jasonshaffner/dev3/anacalypsis/env/bin/python3
#Version 0.9 - Currently supports Alcatel TiMOS, Cisco IOS and IOS-XR, and Junos

import re
from iTTY import iTTY
from iTTY.command import Command, Command_parser
from stringutils import StringUtils

tty = iTTY()
tty.setlogin()
tty.sethost(input("Hostname: ").split('.', 1)[0]) 
print('')
print('  Syntax  |    ALU    |     XR    |   IOS   |  Junos  |')
print('          |-----------|-----------|---------|---------|')
print('One card  |     1     |    0/1    |    7    |    7    |')
print('Two cards |    1|8    |  0/1|0/10 |   7|9   |   7|9   |')
print('All cards |           |           |         |         |')
print('')
card = input("Card(s): ")
if re.search('\|', card):
    card1 = card.split('|')[0] + '/'
    card2 = card.split('|')[1] + '/'
if tty.login(): pass
else:
    print("Couldn't log in")
    exit()
regex = '\d/'
if tty.os == 1:
    tty.setcommands(['environment no more', 'show port | match expression "[0-9] *Up"',])
    if not card: tty.commands[1] += ' | match expression ^[0-9]'
    elif re.search('\|', card):
        tty.commands[1] += ' | match expression "^[' + card1 + '|' + card2 + ']/"'
    else: tty.commands[1] += ' | match expression ^' + card + '/'
    lightcommand = Command(['show port optical '], regex=regex, insertionpoints=[0], commanddelay=1)

elif tty.os == 2:
    tty.setcommands(['terminal length 0', 'show ip interface br | ex Shutdown',])
    if not card: pass
    elif re.search('\|', card):
        tty.commands[1] += ' | utility egrep "E' + card1 + '|E' + card2 + '"'
    else: tty.commands[1] += ' | inc E' + card + '/'
    lightcommand = Command(['show controllers ', ' phy | utility egrep -e "[TR]x [Pp]"'], 
                   regex=regex, insertionpoints=[0], commanddelay=3)
        
elif tty.os == 3:
    tty.setcommands(['terminal length 0', 'show ip interface br',])
    if not card: tty.commands[1] = commands[1] + ' | ex admin'
    if re.search('\|', card):
        tty.commands[1] += ' | inc ' + card1 + '[0-9] .*up|' + card2 + '[0-9] .*up'
    else:
        tty.commands[1] += ' | inc ' + card + '/[0-9] .*up'
    lightcommand = Command(['show interfaces ', ' transceiver | in [0-9]'], regex=regex, insertionpoints=[0], commanddelay=1)

elif tty.os == 4:
        tty.setcommands(['set cli screen-length 0', 'show interfaces terse | except down | except \. | match "ge-|xe-"'])
    if not card: pass
    elif re.search('\|', card):
        tty.commands[1] += ' | match "' + card1 + '|' + card2 + '/"'
    else:
        tty.commands[1] += ' | match ' + card + '/'
    lightcommand = Command(['show interfaces diagnostics optics ', ' | match dBm | except thre'], 
        regex=regex, insertionpoints=[0], commanddelay=1) 
else:
    print("OS is not supported at this time")
    exit()

lowlight = []
tty.runcommands(5)
output = tty.siftoutput(tty.prompt)
commands = Command_parser.generate_commands(lightcommand, output)
command_delay = lightcommand.commanddelay
for command in commands:
    tty.setcommands([command])
    tty.clearoutput()
    tty.runcommands(command_delay)
    levels = tty.siftoutput(tty.prompt)
    if tty.os == 1: #ALU
        interface = tty.commands[0].split()[-1]
        if levels[-2][:1].isspace():
            for i in range(-11, -1):
                line = interface + '\tLane ' + str(i+12) + '\ttx = ' + \
                    levels[i].split()[3] + ' dBm\trx = ' + levels[i].split()[4] + ' dBm'
                print(line)
                if int(levels[i].split()[3].split('.')[0]) <= -7 or \
                    int(levels[i].split()[4].split('.')[0]) <= -7:
                    lowlight.append(line)
        else:
            line = interface + '\ttx = ' + levels[-3].split()[4] + \
                ' dBm\trx = ' + levels[-2].split()[5] + ' dBm' 
            print(line)
            if levels[-3].split()[4].split('.')[0] <= -7 or \
                levels[-2].split()[5].split('.')[0] <= -7:
                lowlight.append(line)

    if tty.os == 2: #IOS-XR
        interface = tty.commands[0].split()[2]
        for i in range(len(levels)):
            if re.search('dBm', levels[i]):
                levels[i] = levels[i].split('W')[1].strip()
            else:
                print(interface + "  Optic not inserted" )
                continue

        if len(levels) > 2:
            for i in range((len(levels)-2)/2):
                line = interface + '\tLane ' + str(i+1) + '\ttx =' + levels[i] + '\trx =' + levels[i+(len(levels)-2)/2]
                print(line)
                tx = int(re.sub('[^0-9]+', '', levels[i].split('.')[0]))
                rx = int(re.sub('[^0-9]+', '', levels[i+(len(levels)-2)/2].split('.')[0]))
                if tx >= 7 or rx >= 7:
                    lowlight.append(line)
            print(interface + '\tTOTAL\ttx ='+ levels[-2] + '\trx =' + levels[-1])
        else:
            print(interface + '\t\ttx ='+ levels[0] + '\trx =' + levels[1])
            if levels[0][3] == "-": levels[0] = "( -40 dBm)" 
            if levels[1][3] == "-": levels[1] = "( -40 dBm)"
            if int(levels[0][3])>= 7 or int(levels[1][3]) >= 7:
                lowlight.append(interface + '\t\ttx =' + levels[0] + '\trx =' + levels[1])

    elif tty.os == 3:  #IOS
        interface = tty.commands[0].split()[2]
        if levels:
            txlev = levels[0].split('-')[1].strip()
            rxlev = levels[0].split('-')[2].strip()
            print(interface + '\ttx = -'+ txlev + '\trx = -' + rxlev)
            if int(txlev[0]) >= 7 or int(rxlev[0]) >= 7:
                lowlight.append(interface + '\ttx = -'+ txlev + '\trx = -' + rxlev)
        else:
            print(interface + "  Optic not inserted")
            continue

    elif tty.os == 4:  #JUNOS
        interface = tty.commands[0].split()[4]
        if levels:
            rxlev = levels[0].split('/')[1].strip().strip('dBm')
            txlev = levels[1].split('/')[1].strip().strip('dbm')
            print(interface + '\ttx = '+ txlev + '\trx = ' + rxlev)
            if int(txlev[1]) >= 7 or int(rxlev[1]) >= 7:
                lowlight.append(interface + '\ttx = '+ txlev + '\trx = ' + rxlev)
        else:
            print(interface + "  Optic not inserted")
            continue

if lowlight:
    print('\n\n' + StringUtils.pad('Interfaces under -7', 20, padchar="*") + '\n')
    for d in lowlight: print(d)
    print('\n' + StringUtils.makeline(61, linechar="*") + '\n')
