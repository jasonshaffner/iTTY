#!/usr/bin/env python
#Currently supports IOS-XR, Alcatel TiMOS and Junos
#This script will compare routing tables from two routers and print overlapping space

import getpass, sys
from iTTY import iTTY
from iTTY.format import Format
from iTTY.mpcommandthread import Mpcommand
from netaddr import IPSet

if len(sys.argv) < 5:
	username = raw_input("Username: ")
	password = getpass.getpass()
        host1 = raw_input("Device 1: ")
	host2 = raw_input("Device 2: ")
	prefix = raw_input("Prefix to look up: ")
else:
        username = sys.argv[1]
	password = sys.argv[2]
        host1 = sys.argv[3].split('.', 1)[0]
	host2 = sys.argv[4].split('.', 1)[0]
        prefix = sys.argv[5]
octet = prefix.split('.')[0]
command_delay = 20
alu = ["environment no more", "show router route-table longer " + prefix + " | match expression ^[1-9]"]
xr = ["terminal len 0", "show route longer-prefixes " + prefix + " | begin " + octet + "."+ "\n"]
junos = ["set cli screen-length 0", "show route range " + prefix + ' | match "^[1-9]"']
hosts = [host1, host2]
threads = []
for host in hosts:
	thread = Mpcommand(username, password, host, command_delay, \
                junoscommands=junos, xrcommands=xr, alucommands=alu, commandheader=0)
        threads.append(thread)
        thread.start()
routetable = []
for t in threads: 
        t.join()
	routes = set()
	for line in Format.siftoutput([t.tty.output], siftout=[t.tty.prompt]):
		if line[:1] and not line[:1].isspace():
			ipaddr = line.split('/')[0].split()[-1].strip()
			cidr = line.split('/')[1].split()[0].strip()
			routes.add(ipaddr + '/' + cidr)
	routetable.append(routes)
common = routetable[0] & routetable[1]
routes1 = IPSet(routetable[0] - common)
routes2 = IPSet(routetable[1] - common)
overlaps = routes1 & routes2
print "\n\n********Routes that overlap********\n\n"
for cidr in overlaps.iter_cidrs():
	print cidr
print "\n\n********Unshared Routes on " + host1 + "********\n\n"
for cidr in routes1.iter_cidrs():
	print cidr
print "\n\n********Unshared Routes on " + host2 + "********\n\n"
for cidr in routes2.iter_cidrs():
	print cidr
