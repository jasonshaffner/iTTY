#!/usr/bin/env python
#Version 0.2 - This currently works for IOS-XR, IOS and JUNOS

import re
from iTTY import iTTY
from iTTY.format import Format

tty = iTTY()
tty.setlogin()
tty.sethost(raw_input("Hostname: ").split('.', 1)[0]) 
print ''
print '  Syntax  |     XR    |   IOS   |  Junos  |'
print '          |-----------|---------|---------|'
print 'One card  |    0/1    |    7    |    7    |'
print 'Two cards |  0/1|0/10 |   7|9   |   7|9   |'
print 'All cards |           |         |         |'
print ''
card = raw_input("Card(s): ")
if re.search('\|', card):
	card1 = card.split('|')[0] + '/|'
	card2 = card.split('|')[1] + '/'
ssh = 0
if tty.securelogin(): ssh = 1
elif tty.unsecurelogin(): ssh = 0
else:
	print "Couldn't log in"
	exit()

if tty.os == 2:
	commands = ['terminal length 0', 'show ip interface br | ex Shutdown',]
	if not card: pass
	elif re.search('\|', card):
	    commands[1] = commands[1] + ' | utility egrep "E' + card1 + 'E' + card2 + '"'
	else: commands[1] = commands[1] + ' | inc E' + card + '/'
	    
elif tty.os == 3:
	commands = ['terminal length 0', 'show ip interface br',]
	if not card: commands[1] = commands[1] + ' | ex admin'
	if re.search('\|', card):
	    commands[1] = commands[1] + ' | inc ' + card1 + card2
	else:
	    commands[1] = commands[1] + ' | inc ' + card + '/'

elif tty.os == 4:
    	commands = ['set cli screen-length 0', 'show interfaces terse | except down | except \. | match "ge-|xe-"']
	if not card: pass
	elif re.search('\|', card):
	    commands[1] = commands[1] + ' | match "' + card1 + card2 + '/"'
	else:
	    commands[1] = commands[1] + ' | match ' + card + '/'

else:
	print "Incompatible with this OS"
	exit()

tty.setcommands(commands)
if ssh: output = Format.siftoutput(tty.runseccommands(3), siftout=['down', tty.prompt])
else: output = Format.siftoutput(tty.rununseccommands(3), siftout=['down', tty.prompt])
lowlight = [] 
for entry in output:
	interface = entry.split(' ')[0].strip()
	tty.clearcommands()
	tty.clearoutput()
	if tty.os == 2: #IOS-XR
		tty.setcommands(['show controllers ' + interface + ' phy | utility egrep -e "[TR]x [Pp]"',])
		if ssh: levels = Format.siftoutput(tty.runseccommands(3), siftout=[tty.prompt, 'show'])
		else: levels = Format.siftoutput(tty.rununseccommands(3), siftout=[tty.prompt, 'show'])
		for i in range(len(levels)):
			if re.search('dBm', levels[i]):
				levels[i] = levels[i].split('W')[1].strip()
			else:
				print interface + "  Optic not inserted" 
				continue

		if len(levels) > 2: 
			i = 0
			for i in range(10):
				print interface + '   Lane ' + str(i) + '  tx =' + levels[i] + '  rx =' + levels[i+10]
				if int(levels[i][3]) >= 7 or int(levels[i+10][3]) >= 7:
					lowlight.append(interface + '  tx =' + levels[i] + '  rx =' + levels[i+10] + "  = Lane " + str(i))
			print interface + '   TOTAL   tx ='+ levels[20] + '  rx =' + levels[21]
		else:
			print interface + '  tx ='+ levels[0] + '  rx =' + levels[1]
			if int(levels[0][3]) >= 7 or int(levels[1][3]) >= 7:
				lowlight.append(interface + '  tx =' + levels[0] + '  rx =' + levels[1])

	elif tty.os == 3:  #IOS
		tty.setcommands(['show interfaces ' + interface + ' transceiver | inc ' + interface[-3:],]) 
		if ssh: levels = Format.siftoutput(tty.runseccommands(3), siftout=[tty.prompt, 'show'])
		else: levels = Format.siftoutput(tty.rununseccommands(3), siftout=[tty.prompt, 'show'])
		if levels:
			txlev = levels[0].split('-')[1].strip()
			rxlev = levels[0].split('-')[2].strip()
			print interface + '  tx = -'+ txlev + '  rx = -' + rxlev
			if int(txlev[0]) >= 7 or int(rxlev[0]) >= 7:
				lowlight.append(interface + '  tx = -'+ txlev + '  rx = -' + rxlev)
		else:
			print interface + "  Optic not inserted"
			continue

	elif tty.os == 4:  #JUNOS
		tty.setcommands(['show interfaces diagnostics optics ' + interface + ' | match dBm | except thre',])
		if ssh: levels = Format.siftoutput(tty.runseccommands(3), siftout=[tty.username, 'show'])
		else: levels = Format.siftoutput(tty.rununseccommands(3), siftout=[tty.username, 'show'])
		if levels:
			rxlev = levels[0].split('/')[1].strip().strip('dBm')
			txlev = levels[1].split('/')[1].strip().strip('dbm')
			print interface + '  tx = '+ txlev + '  rx = ' + rxlev
			if int(txlev[1]) >= 7 or int(rxlev[1]) >= 7:
				lowlight.append(interface + '  tx = '+ txlev + '  rx = ' + rxlev)
		else: 
			print interface + "  Optic not inserted"
			continue

if lowlight:
	print '\n\n' + Format.pad('Interfaces under -7', 20, padchar="*") + '\n'
	for d in lowlight: print d
	print '\n' + Format.makeline(61, linechar="*") + '\n'
