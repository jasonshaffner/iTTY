#!/usr/bin/env python3
#Currently supports IOS-XR, Alcatel TiMOS and Junos
#This script will pull the avalable space in a supernet

import getpass, sys
from iTTY import iTTY
from netaddr import IPSet

tty = iTTY()
if len(sys.argv) < 5:
        tty.setlogin()
        tty.sethost(input("Device: "))
    prefix = input("Prefix to look up: ")
else:
        tty.setlogin(username=sys.argv[1],password=sys.argv[2])
        tty.sethost(sys.argv[3].split('.', 1)[0])
        prefix = sys.argv[4]
octet = prefix.split('.')[0]
command_delay = 20
alu = ["environment no more", "show router route-table longer " + prefix + " | match expression ^[1-9]"]
xr = ["terminal len 0", "show route longer-prefixes " + prefix + " | begin " + octet + "."+ "\n"]
junos = ["set cli screen-length 0", "show route range " + prefix + ' | match "^[1-9]"']
if tty.login():
    if tty.os == 1: tty.setcommands(alu)
    elif tty.os == 2: tty.setcommands(xr)
    elif tty.os == 4: tty.setcommands(junos)
    else:
        print("OS is not supported at this time")
        exit()
else:
    print("Couldn't log in.")
    exit()
tty.runcommands(command_delay)
routetable = []
for line in tty.siftoutput(tty.prompt):
    if line[:1] and not line[:1].isspace():
        ipaddr = line.split('/')[0].split()[-1].strip()
        cidr = line.split('/')[1].split()[0].strip()
        routetable.append(ipaddr + '/' + cidr)
ipv4_addr_space = IPSet({prefix})
router_routes = IPSet(routetable)
unavailable = router_routes
available = ipv4_addr_space ^ unavailable
print("\n\n********IP Space that is NOT in routing********\n\n")
for cidr in available.iter_cidrs():
    print(cidr)
