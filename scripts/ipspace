#!/usr/bin/env python
#This works for IOS-XR
#This will try SSH first then try Telnet
#This script will pull the avalable space in a supernet
import getpass, netaddr, re, sys
from iTTY import iTTY
from iTTY.format import Format
from netaddr import IPSet

tty = iTTY()
if len(sys.argv) < 5:
        tty.setlogin()
        tty.sethost(raw_input("Device: "))
	prefix = raw_input("Prefix to look up: ")
else:
        tty.setlogin(username=sys.argv[1],password=sys.argv[2])
        tty.sethost(sys.argv[3].split('.', 1)[0])
        prefix = sys.argv[4]
octet = prefix.split('.')[0]
command_delay = 20
xrcommands = ["terminal len 0", "show route longer-prefixes " + prefix + " | begin " + octet + "."+ "\n"]
tty.setcommands(xrcommands)
if tty.securelogin(): tty.runseccommands(command_delay)
elif tty.unsecurelogin(): tty.rununseccommands(command_delay)
else:
	print "Couldn't log in."
	exit()
routetable = []
for line in Format.siftoutput(tty.output, siftout=[tty.prompt]):
	if line[:1].isalpha():
		ipaddr = line.split('/')[0].split()[-1].strip()
		cidr = line.split('/')[1].split()[0].strip()
		routetable.append(ipaddr + '/' + cidr)
ipv4_addr_space = IPSet({prefix})
router_routes = IPSet(routetable)
unavailable = router_routes
available = ipv4_addr_space ^ unavailable
print "\n\n********IP Space that is NOT in routing********\n\n"
for cidr in available.iter_cidrs():
	print cidr
